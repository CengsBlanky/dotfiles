let vim_config_file="~/.config/nvim/init.vim"
let plugin_path="~/.nvim/plugins"
let plug_file="~/.vim/plug.vim"
let g:python_host_skip_check=1
let g:markdown_folding = 1
if &shell =~# 'fish$'
  set shell=sh
endif

set nocompatible
filetype plugin indent on
syntax on
language en_US.UTF-8
set encoding=utf-8
inoremap jk <esc>
set hidden
set number
set relativenumber
set incsearch
set smartcase
set tabstop=4 shiftwidth=4 expandtab smartindent autoindent shiftround
set softtabstop=4
set showcmd
set laststatus=2
set wildmenu
set showmatch
set autoread
set autowrite
set confirm
set updatetime=100
set noundofile
set noswapfile
set nobackup
set clipboard+=unnamedplus
set hlsearch
set mousehide
set mouse=a
set signcolumn=yes
set nowrap
set cmdheight=1
set showtabline=2
set splitbelow
set splitright
set grepprg=rg\ -p\ --vimgrep\ --ignore-file\ ~/.vim/ignorefile
set grepformat=%f:%l:%c:%m

nnoremap <nowait><leader>q :x<CR>
noremap <silent><M-b> :bd<CR>
" close other buffers see line: 590
nnoremap <leader>o :Bonly<CR>
" use command to open my vimrc
command! Editrc execute 'edit' vim_config_file
" screen scroll add <nowait> to execute immediately
" see autocmd keymap_force to set scroll down
" use backspace to scroll up
nnoremap <silent><BS> <C-b>
" <leader> <Enter> to create new line in normal mode
nnoremap <silent><nowait><leader><Enter> :set paste<CR>m`o<ESC>``:set nopaste<CR>
" switch between buffers
nnoremap <silent><nowait><RIGHT> :bn<CR>
nnoremap <silent><nowait><LEFT> :bp<CR>
" go next buffer
nnoremap <silent><TAB> :bn<CR>
" cd to current file directory
nnoremap <leader>cd :lcd %:p:h<CR>
" map <esc> to quit terminal mode
tnoremap <Esc> <C-\><C-n>
" save
nnoremap <silent><Enter> :w<CR>
" toggle hlsearch
nnoremap <leader>h :set hlsearch!<CR>
" resize window
nnoremap <silent><leader><UP> :resize +1<CR>
nnoremap <silent><leader><DOWN> :resize -1<CR>
nnoremap <silent><leader><RIGHT> :vertical resize +1<CR>
nnoremap <silent><leader><LEFT> :vertical resize -1<CR>
" split current window
nnoremap <silent><leader>- :split<CR>
nnoremap <silent><leader>/ :vsplit<CR>
" quickfix list operations
nnoremap <leader>f :copen<CR>
nnoremap <C-j> :cnext<CR>
nnoremap <C-k> :cprevious<CR>

" buffer jump
if has("g:buftabline_numbers") == 2
  nnoremap <silent><leader>1 :b1<CR>
  nnoremap <silent><leader>2 :b2<CR>
  nnoremap <silent><leader>3 :b3<CR>
  nnoremap <silent><leader>4 :b4<CR>
  nnoremap <silent><leader>5 :b5<CR>
  nnoremap <silent><leader>6 :b6<CR>
  nnoremap <silent><leader>7 :b7<CR>
  nnoremap <silent><leader>8 :b8<CR>
  nnoremap <silent><leader>9 :b9<CR>
endif

augroup filetype_specific
  autocmd!
  autocmd FileType vim setlocal foldmethod=marker
  autocmd BufNewFile,BufRead *.tsx,*.jsx set filetype=typescriptreact
  autocmd BufNewFile,BufRead *.log set filetype=log
augroup END

augroup filetype_indent_size
  autocmd!
  autocmd FileType html,css,javascript,typescript,typescriptreact,vue,yaml,sql,json,vim
        \ setlocal tabstop=2 shiftwidth=2
augroup END

function TrimEndLinesAndTrailingSpaces()
  let save_cursor = getpos(".")
  silent! %s#\($\n\s*\)\+\%$##
  silent! %s/\s\+$//e
  call setpos('.', save_cursor)
  " echom "trailing spaces and empty lines done!"
endfunction
augroup filetype_edit_behavior
  autocmd!
  autocmd FileType * setlocal textwidth=0
  " do not auto add comment when add new comment line in normal mode
  autocmd FileType * setlocal formatoptions-=o
  " auto remove all trailing empty lines before saving
  autocmd BufWritePre *.c,*.cpp,*.h,*.js,*.html,*.sh,*.py,*.yml,*.yaml,*.java
        \ call TrimEndLinesAndTrailingSpaces()
augroup END

augroup keymap_force
  autocmd!
  autocmd BufEnter * nnoremap <nowait><silent> <Space> <C-f>
  " unremap <CR> key when in quickfix list
  autocmd BufReadPost quickfix nnoremap <buffer> <CR> <CR>
augroup END

execute 'source' plug_file
call plug#begin(fnameescape(plugin_path))
Plug 'git@github.com:sainnhe/gruvbox-material'
Plug 'git@github.com:neovim/nvim-lspconfig'
Plug 'git@github.com:nvim-treesitter/nvim-treesitter.git', {'do': ':TSUpdate'}
Plug 'git@github.com:ap/vim-buftabline.git'
Plug 'git@github.com:ryanoasis/vim-devicons.git'
Plug 'git@github.com:neovim/nvim-lspconfig'
Plug 'git@github.com:hrsh7th/nvim-cmp'
Plug 'git@github.com:hrsh7th/cmp-nvim-lsp'
Plug 'git@github.com:saadparwaiz1/cmp_luasnip'
Plug 'git@github.com:L3MON4D3/LuaSnip'
call plug#end()

lua require('init')

set t_Co=256
set termguicolors
colorscheme gruvbox-material
highlight StatusLine gui=bold
